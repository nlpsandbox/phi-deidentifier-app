/* tslint:disable */
/* eslint-disable */
/**
 * NLP Sandbox PHI Deidentifier API
 * # Introduction This NLP tool takes as input a clinical note and returned a de-identified version of the note. This design of this API is a work in progress. # Examples - [NLP Sandbox PHI Deidentifier](https://github.com/nlpsandbox/phi-deidentifier) 
 *
 * The version of the OpenAPI document: 1.1.2
 * Contact: team@nlpsandbox.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TextAnnotation,
    TextAnnotationFromJSON,
    TextAnnotationFromJSONTyped,
    TextAnnotationToJSON,
} from './';

/**
 * A person name annotation in a text
 * @export
 * @interface TextPersonNameAnnotation
 */
export interface TextPersonNameAnnotation {
    /**
     * The position of the first character
     * @type {number}
     * @memberof TextPersonNameAnnotation
     */
    start: number;
    /**
     * The length of the annotation
     * @type {number}
     * @memberof TextPersonNameAnnotation
     */
    length: number;
    /**
     * The string annotated
     * @type {string}
     * @memberof TextPersonNameAnnotation
     */
    text: string;
    /**
     * The confidence in the accuracy of the annotation
     * @type {number}
     * @memberof TextPersonNameAnnotation
     */
    confidence: number;
}

export function TextPersonNameAnnotationFromJSON(json: any): TextPersonNameAnnotation {
    return TextPersonNameAnnotationFromJSONTyped(json, false);
}

export function TextPersonNameAnnotationFromJSONTyped(json: any, ignoreDiscriminator: boolean): TextPersonNameAnnotation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'start': json['start'],
        'length': json['length'],
        'text': json['text'],
        'confidence': json['confidence'],
    };
}

export function TextPersonNameAnnotationToJSON(value?: TextPersonNameAnnotation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'start': value.start,
        'length': value.length,
        'text': value.text,
        'confidence': value.confidence,
    };
}


